@page "/products"
@inject NavigationManager NavigationManager
@inject UseCases.IViewProductsUseCase ViewProductsUseCase
@inject UseCases.IGetCategoryByIdUseCase GetGategoryByIdUseCase

<h3>Products Component</h3>

@if (products != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Product Category</th>
                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@GetGategoryByIdUseCase.Execute(product.CategoryId)?.Name</td>
                    <td>@product.Name</td>
                    <td>@Math.Round(product.Price, 2)</td>
                    <td>@product.Quantity</td>
                    <td>
                        <button type="button" class="btn btn-link">Edit</button>
                        <button type="button" class="btn btn-link">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        <button type="button" class="btn btn-primary">Add Product</button>
    </div>

}

@code {
    private IEnumerable<Product> products;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        ListProducts();
    }

    private void ListProducts()
    {
        products = ViewProductsUseCase.Execute();
    }
}